{"version":3,"sources":["Components/SearchBar.js","Api/YouTube.js","Components/VideoItem.js","Components/VideoList.js","Components/VideoDetail.js","Components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","onClick","onVideoSelect","video","src","snippet","thumbnails","medium","url","title","VideoList","renderedList","videos","map","id","videoId","VideoDetail","videoSrc","description","App","selectedVideo","onTermSubmit","a","YouTube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"2OAkCeA,E,4MA9BXC,MAAM,CAACC,KAAK,I,EAEZC,cAAc,SAACC,GACX,EAAKC,SAAS,CAACH,KAAKE,EAAME,OAAOC,S,EAErCC,aAAa,SAACJ,GACVA,EAAMK,iBAEN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,4CAIvC,WACG,OACC,qBAAKS,UAAU,uBAAf,SACI,sBAAMA,UAAU,UAAUC,SAAUC,KAAKL,aAAzC,SACI,sBAAKG,UAAU,QAAf,UACA,kDACA,uBAAOG,KAAK,OACZP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,2B,GAtBPa,IAAMC,W,QCGfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAQ,wCACRC,OAAO,CACHC,KAAK,UACLC,WAAW,GACXC,IAPE,0CAQFV,KAAM,WCSCW,G,MAhBC,SAACf,GAEb,OACI,sBAAKgB,QAAS,kBAAIhB,EAAMiB,cAAcjB,EAAMkB,QAAQjB,UAAU,mBAA9D,UACI,qBAAKA,UAAU,WAAWkB,IAAKnB,EAAMkB,MAAME,QAAQC,WAAWC,OAAOC,MACrE,qBAAKtB,UAAU,UAAf,SACC,qBAAKA,UAAU,SAAf,SAAyBD,EAAMkB,MAAME,QAAQI,eCU3CC,EAhBC,SAACzB,GAEhB,IAAM0B,EAAa1B,EAAM2B,OAAOC,KAAI,SAACV,GAC9B,OAAO,cAAC,EAAD,CAAkCD,cAAejB,EAAMiB,cAC9DC,MAAOA,GADgBA,EAAMW,GAAGC,YAMpC,OACI,qBAAK7B,UAAU,0BAAf,SAA0CyB,KCclCK,EA1BE,SAAC/B,GACf,IAAIA,EAAMkB,MACN,OAAO,4CAGX,IAAMc,EAAS,iCAAD,OAAkChC,EAAMkB,MAAMW,GAAGC,SAE/D,OAEI,gCACI,qBAAK7B,UAAU,WAAf,SACI,wBAAQkB,IAAKa,MAEjB,sBAAK/B,UAAU,aAAf,UACA,oBAAIA,UAAU,YAAd,SACCD,EAAMkB,MAAME,QAAQI,QAErB,4BAAIxB,EAAMkB,MAAME,QAAQa,qBCwCrBC,E,4MA9CX3C,MAAM,CAACoC,OAAO,GAAGQ,cAAc,M,EAM/BC,a,uCAAc,WAAM5C,GAAN,eAAA6C,EAAA,sEAEUC,EAAQC,IAAI,UAAU,CACvC5B,OAAO,CACN6B,EAAEhD,KAJI,OAELiD,EAFK,OAQV,EAAK9C,SAAS,CACVgC,OAAOc,EAASC,KAAKC,MACrBR,cAAcM,EAASC,KAAKC,MAAM,KAV5B,2C,wDAed1B,cAAc,SAACC,GAEX,EAAKvB,SAAS,CAACwC,cAAcjB,K,uDArBjC,WACIf,KAAKiC,aAAa,iB,oBAuBtB,WACI,OACA,sBAAKnC,UAAU,eAAf,UACI,cAAC,EAAD,CAAWH,aAAcK,KAAKiC,eAC9B,qBAAKnC,UAAU,UAAf,SACA,sBAAKA,UAAU,SAAf,UACA,qBAAKA,UAAU,qBAAf,SACA,cAAC,EAAD,CAAaiB,MAAOf,KAAKZ,MAAM4C,kBAE/B,qBAAKlC,UAAU,mBAAf,SACA,cAAC,EAAD,CAAWgB,cAAed,KAAKc,cAC/BU,OAAQxB,KAAKZ,MAAMoC,uB,GAzCbrB,IAAMC,WCHxBqC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.77dd4886.chunk.js","sourcesContent":["import React from'react'\r\n\r\nclass SearchBar extends React.Component{\r\n\r\n    state={term:''}\r\n\r\n    onInputChange=(event)=>{\r\n        this.setState({term:event.target.value})\r\n    }\r\n    onFormSubmit=(event)=>{\r\n        event.preventDefault();\r\n\r\n        this.props.onFormSubmit(this.state.term);\r\n        \r\n    };\r\n\r\n    render(){\r\n       return(\r\n        <div className=\"ui segment searchbar\">\r\n            <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                <div className='feild'>\r\n                <label>Search Videos</label>\r\n                <input type=\"text\" \r\n                value={this.state.term}\r\n                onChange={this.onInputChange}\r\n                ></input>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n       ) \r\n    }\r\n\r\n}\r\nexport default SearchBar","import React from'react';\r\nimport axios from'axios';\r\n\r\nconst KEY='AIzaSyCDyeU39O-BMBdjcJwq7vpXSMHFNrNa10Q'\r\n\r\nexport default axios.create({\r\n    baseURL:'https://www.googleapis.com/youtube/v3',\r\n    params:{\r\n        part:'snippet',\r\n        maxResults:10,\r\n        key:KEY,\r\n        type: 'video'\r\n    }\r\n    \r\n})\r\n\r\n\r\n\r\n","import './videoItem.css'\r\nimport React from'react'\r\n\r\n\r\nconst VideoItem=(props)=>{\r\n\r\n    return(\r\n        <div onClick={()=>props.onVideoSelect(props.video)} className=' video-Item item'>\r\n            <img className=\"ui image\" src={props.video.snippet.thumbnails.medium.url}/>\r\n            <div className='content'>\r\n             <div className='header'>{props.video.snippet.title}\r\n            </div> \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    \r\n\r\n}\r\n\r\nexport default VideoItem","import React from 'react';\r\nimport VideoItem from'./VideoItem'\r\n\r\n\r\nconst VideoList=(props)=>{\r\n\r\n const renderedList=props.videos.map((video)=>{\r\n        return <VideoItem key={video.id.videoId} onVideoSelect={props.onVideoSelect}\r\n        video={video}></VideoItem>\r\n    })\r\n\r\n    \r\n\r\n    return(\r\n        <div className='ui relaxed divided list'>{renderedList}</div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default VideoList","import React from'react'\r\n\r\nconst VideoDetail=(props)=>{\r\n    if(!props.video){\r\n        return <div>Loading!!</div>\r\n    }\r\n\r\n    const videoSrc=`https://www.youtube.com/embed/${props.video.id.videoId}`\r\n     \r\n    return (\r\n        \r\n        <div>\r\n            <div className='ui embed'>\r\n                <iframe src={videoSrc}/>\r\n            </div>\r\n            <div className='ui segment'>\r\n            <h4 className='ui header'>\r\n            {props.video.snippet.title}\r\n            </h4>\r\n            <p>{props.video.snippet.description}</p>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\n\r\nexport  default VideoDetail","\r\nimport React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport YouTube from'../Api/YouTube'\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n\r\n\r\n    state={videos:[],selectedVideo:null}\r\n\r\n    componentDidMount(){\r\n        this.onTermSubmit('DragonBallz');\r\n    }\r\n\r\n    onTermSubmit= async(term)=>{\r\n        \r\n       const response=await YouTube.get('/search',{\r\n           params:{\r\n            q:term\r\n           }\r\n        })\r\n        \r\n        this.setState({\r\n            videos:response.data.items,\r\n            selectedVideo:response.data.items[0]\r\n        })\r\n        \r\n    }\r\n\r\n    onVideoSelect=(video)=>{\r\n        \r\n        this.setState({selectedVideo:video});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className='ui container'>\r\n            <SearchBar onFormSubmit={this.onTermSubmit}></SearchBar>\r\n            <div className='ui grid'>\r\n            <div className='ui row'>\r\n            <div className='eleven wide column'>\r\n            <VideoDetail video={this.state.selectedVideo} ></VideoDetail>\r\n            </div>\r\n            <div className='five wide column'>\r\n            <VideoList onVideoSelect={this.onVideoSelect} \r\n            videos={this.state.videos}></VideoList>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default App","import React from'react';\r\nimport ReactDOM from'react-dom';\r\nimport App from './Components/App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n\r\n)"],"sourceRoot":""}